// Code generated by 'goexports gonum.org/v1/plot/vg'. DO NOT EDIT.

// +build go1.14,!go1.15

package symbols

import (
	"gonum.org/v1/plot/vg"
	"image"
	"image/color"
	"io"
	"reflect"
)

func init() {
	Symbols["gonum.org/v1/plot/vg"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AddFont":     reflect.ValueOf(vg.AddFont),
		"ArcComp":     reflect.ValueOf(vg.ArcComp),
		"Centimeter":  reflect.ValueOf(vg.Centimeter),
		"CloseComp":   reflect.ValueOf(vg.CloseComp),
		"CurveComp":   reflect.ValueOf(vg.CurveComp),
		"FontDirs":    reflect.ValueOf(&vg.FontDirs).Elem(),
		"FontMap":     reflect.ValueOf(&vg.FontMap).Elem(),
		"Inch":        reflect.ValueOf(vg.Inch),
		"Initialize":  reflect.ValueOf(vg.Initialize),
		"LineComp":    reflect.ValueOf(vg.LineComp),
		"MakeFont":    reflect.ValueOf(vg.MakeFont),
		"Millimeter":  reflect.ValueOf(vg.Millimeter),
		"MoveComp":    reflect.ValueOf(vg.MoveComp),
		"ParseLength": reflect.ValueOf(vg.ParseLength),
		"Points":      reflect.ValueOf(vg.Points),

		// type definitions
		"Canvas":         reflect.ValueOf((*vg.Canvas)(nil)),
		"CanvasSizer":    reflect.ValueOf((*vg.CanvasSizer)(nil)),
		"CanvasWriterTo": reflect.ValueOf((*vg.CanvasWriterTo)(nil)),
		"Font":           reflect.ValueOf((*vg.Font)(nil)),
		"FontExtents":    reflect.ValueOf((*vg.FontExtents)(nil)),
		"Length":         reflect.ValueOf((*vg.Length)(nil)),
		"Path":           reflect.ValueOf((*vg.Path)(nil)),
		"PathComp":       reflect.ValueOf((*vg.PathComp)(nil)),
		"Point":          reflect.ValueOf((*vg.Point)(nil)),
		"Rectangle":      reflect.ValueOf((*vg.Rectangle)(nil)),

		// interface wrapper definitions
		"_Canvas":         reflect.ValueOf((*_gonum_org_v1_plot_vg_Canvas)(nil)),
		"_CanvasSizer":    reflect.ValueOf((*_gonum_org_v1_plot_vg_CanvasSizer)(nil)),
		"_CanvasWriterTo": reflect.ValueOf((*_gonum_org_v1_plot_vg_CanvasWriterTo)(nil)),
	}
}

// _gonum_org_v1_plot_vg_Canvas is an interface wrapper for Canvas type
type _gonum_org_v1_plot_vg_Canvas struct {
	WDrawImage    func(rect vg.Rectangle, img image.Image)
	WFill         func(a0 vg.Path)
	WFillString   func(f vg.Font, pt vg.Point, text string)
	WPop          func()
	WPush         func()
	WRotate       func(rad float64)
	WScale        func(x float64, y float64)
	WSetColor     func(a0 color.Color)
	WSetLineDash  func(pattern []vg.Length, offset vg.Length)
	WSetLineWidth func(a0 vg.Length)
	WStroke       func(a0 vg.Path)
	WTranslate    func(pt vg.Point)
}

func (W _gonum_org_v1_plot_vg_Canvas) DrawImage(rect vg.Rectangle, img image.Image) {
	W.WDrawImage(rect, img)
}
func (W _gonum_org_v1_plot_vg_Canvas) Fill(a0 vg.Path) { W.WFill(a0) }
func (W _gonum_org_v1_plot_vg_Canvas) FillString(f vg.Font, pt vg.Point, text string) {
	W.WFillString(f, pt, text)
}
func (W _gonum_org_v1_plot_vg_Canvas) Pop()                       { W.WPop() }
func (W _gonum_org_v1_plot_vg_Canvas) Push()                      { W.WPush() }
func (W _gonum_org_v1_plot_vg_Canvas) Rotate(rad float64)         { W.WRotate(rad) }
func (W _gonum_org_v1_plot_vg_Canvas) Scale(x float64, y float64) { W.WScale(x, y) }
func (W _gonum_org_v1_plot_vg_Canvas) SetColor(a0 color.Color)    { W.WSetColor(a0) }
func (W _gonum_org_v1_plot_vg_Canvas) SetLineDash(pattern []vg.Length, offset vg.Length) {
	W.WSetLineDash(pattern, offset)
}
func (W _gonum_org_v1_plot_vg_Canvas) SetLineWidth(a0 vg.Length) { W.WSetLineWidth(a0) }
func (W _gonum_org_v1_plot_vg_Canvas) Stroke(a0 vg.Path)         { W.WStroke(a0) }
func (W _gonum_org_v1_plot_vg_Canvas) Translate(pt vg.Point)     { W.WTranslate(pt) }

// _gonum_org_v1_plot_vg_CanvasSizer is an interface wrapper for CanvasSizer type
type _gonum_org_v1_plot_vg_CanvasSizer struct {
	WDrawImage    func(rect vg.Rectangle, img image.Image)
	WFill         func(a0 vg.Path)
	WFillString   func(f vg.Font, pt vg.Point, text string)
	WPop          func()
	WPush         func()
	WRotate       func(rad float64)
	WScale        func(x float64, y float64)
	WSetColor     func(a0 color.Color)
	WSetLineDash  func(pattern []vg.Length, offset vg.Length)
	WSetLineWidth func(a0 vg.Length)
	WSize         func() (x vg.Length, y vg.Length)
	WStroke       func(a0 vg.Path)
	WTranslate    func(pt vg.Point)
}

func (W _gonum_org_v1_plot_vg_CanvasSizer) DrawImage(rect vg.Rectangle, img image.Image) {
	W.WDrawImage(rect, img)
}
func (W _gonum_org_v1_plot_vg_CanvasSizer) Fill(a0 vg.Path) { W.WFill(a0) }
func (W _gonum_org_v1_plot_vg_CanvasSizer) FillString(f vg.Font, pt vg.Point, text string) {
	W.WFillString(f, pt, text)
}
func (W _gonum_org_v1_plot_vg_CanvasSizer) Pop()                       { W.WPop() }
func (W _gonum_org_v1_plot_vg_CanvasSizer) Push()                      { W.WPush() }
func (W _gonum_org_v1_plot_vg_CanvasSizer) Rotate(rad float64)         { W.WRotate(rad) }
func (W _gonum_org_v1_plot_vg_CanvasSizer) Scale(x float64, y float64) { W.WScale(x, y) }
func (W _gonum_org_v1_plot_vg_CanvasSizer) SetColor(a0 color.Color)    { W.WSetColor(a0) }
func (W _gonum_org_v1_plot_vg_CanvasSizer) SetLineDash(pattern []vg.Length, offset vg.Length) {
	W.WSetLineDash(pattern, offset)
}
func (W _gonum_org_v1_plot_vg_CanvasSizer) SetLineWidth(a0 vg.Length)        { W.WSetLineWidth(a0) }
func (W _gonum_org_v1_plot_vg_CanvasSizer) Size() (x vg.Length, y vg.Length) { return W.WSize() }
func (W _gonum_org_v1_plot_vg_CanvasSizer) Stroke(a0 vg.Path)                { W.WStroke(a0) }
func (W _gonum_org_v1_plot_vg_CanvasSizer) Translate(pt vg.Point)            { W.WTranslate(pt) }

// _gonum_org_v1_plot_vg_CanvasWriterTo is an interface wrapper for CanvasWriterTo type
type _gonum_org_v1_plot_vg_CanvasWriterTo struct {
	WDrawImage    func(rect vg.Rectangle, img image.Image)
	WFill         func(a0 vg.Path)
	WFillString   func(f vg.Font, pt vg.Point, text string)
	WPop          func()
	WPush         func()
	WRotate       func(rad float64)
	WScale        func(x float64, y float64)
	WSetColor     func(a0 color.Color)
	WSetLineDash  func(pattern []vg.Length, offset vg.Length)
	WSetLineWidth func(a0 vg.Length)
	WSize         func() (x vg.Length, y vg.Length)
	WStroke       func(a0 vg.Path)
	WTranslate    func(pt vg.Point)
	WWriteTo      func(w io.Writer) (n int64, err error)
}

func (W _gonum_org_v1_plot_vg_CanvasWriterTo) DrawImage(rect vg.Rectangle, img image.Image) {
	W.WDrawImage(rect, img)
}
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Fill(a0 vg.Path) { W.WFill(a0) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) FillString(f vg.Font, pt vg.Point, text string) {
	W.WFillString(f, pt, text)
}
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Pop()                       { W.WPop() }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Push()                      { W.WPush() }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Rotate(rad float64)         { W.WRotate(rad) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Scale(x float64, y float64) { W.WScale(x, y) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) SetColor(a0 color.Color)    { W.WSetColor(a0) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) SetLineDash(pattern []vg.Length, offset vg.Length) {
	W.WSetLineDash(pattern, offset)
}
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) SetLineWidth(a0 vg.Length)        { W.WSetLineWidth(a0) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Size() (x vg.Length, y vg.Length) { return W.WSize() }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Stroke(a0 vg.Path)                { W.WStroke(a0) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) Translate(pt vg.Point)            { W.WTranslate(pt) }
func (W _gonum_org_v1_plot_vg_CanvasWriterTo) WriteTo(w io.Writer) (n int64, err error) {
	return W.WWriteTo(w)
}
